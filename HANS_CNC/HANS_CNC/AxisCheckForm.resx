<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button18.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>